name: CI
on: push
jobs:
  test:
    name: Run CI workflows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.9
          - 3.13
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up nox
        run: |
          uv tool install nox
      - name: Run workflow
        run: |
          nox -p ${{ matrix.python-version }}
        env:
          DOCSEARCH_APP_ID: ${{ vars.DOCSEARCH_APP_ID }}
          DOCSEARCH_API_KEY: ${{ vars.DOCSEARCH_API_KEY }}
          DOCSEARCH_INDEX_NAME: ${{ vars.DOCSEARCH_INDEX_NAME }}
  links:
    name: Check for broken links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Set up nox
        run: |
          uv tool install nox
      - name: Check links
        run: |
          nox -s links
        env:
          DOCSEARCH_APP_ID: ${{ vars.DOCSEARCH_APP_ID }}
          DOCSEARCH_API_KEY: ${{ vars.DOCSEARCH_API_KEY }}
          DOCSEARCH_INDEX_NAME: ${{ vars.DOCSEARCH_INDEX_NAME }}
  build:
    name: Build the package
    runs-on: ubuntu-latest
    needs:
      - test
      - links
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Build packages
        run: |
          uv build
      - uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/
  publish:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      id-token: write
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  release:
    name: Create new GitHub release
    runs-on: ubuntu-latest
    needs:
      - publish
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/
      - name: Create GitHub release
        run: |
          gh release create --repo ${{ github.repository }} ${{ github.ref_name }} ./dist/**
        env:
          GITHUB_TOKEN: ${{ github.token }}
